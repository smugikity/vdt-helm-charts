apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-elasticsearch
  labels:
    k8s-app: fluentd-logging
spec:
  selector:
    matchLabels:
      name: fluentd-elasticsearch
  template:
    metadata:
      labels:
        name: fluentd-elasticsearch
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      containers:
      - name: fluentd-elasticsearch
        image: fluent/fluentd-kubernetes-daemonset:v1.16-debian-elasticsearch8-2
        securityContext:
          runAsUser: 0
        env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name:  FLUENT_ELASTICSEARCH_HOST # địa chỉ của elasticsearch
            value: "116.103.226.146"
          - name:  FLUENT_ELASTICSEARCH_PORT # port được mở
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "https"
          - name:  FLUENT_ELASTICSEARCH_SSL_VERIFY # không self signed cert
            value: "false"
          - name:  FLUENT_ELASTICSEARCH_SSL_VERSION # elasticsearch ver8 sử dụng chuẩn này
            value: "TLSv1_2"
          - name: FLUENT_ELASTICSEARCH_USER
            value: "elastic"
          - name: FLUENT_ELASTICSEARCH_PASSWORD
            value: "iRsUoyhqW-CyyGdwk6V_"
        resources:
          limits:
            memory: 400Mi
          requests:
            cpu: 150m
            memory: 200Mi
        volumeMounts:
          - name: varlog
            mountPath: /var/log
          - name: fluentd-config
            mountPath: /fluentd/etc
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
      # it may be desirable to set a high priority class to ensure that a DaemonSet Pod
      # preempts running Pods
      # priorityClassName: important
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: fluentd-config
        configMap:
          name: fluentd-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
data:
  fluent.conf: |

    <label @FLUENT_LOG>
      <match fluent.**>
        @type null
        @id ignore_fluent_logs
      </match>
    </label>
    # Fetch all container logs
    <source>
      @type tail
      @id in_tail_container_logs
      path /var/log/containers/*helm*.log
      pos_file /var/log/fluentd.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type cri
      </parse>
    </source> 

    # <filter **>
    #   @type parser
    #   key_name message
    #   reserve_data true
    #   <parse>
    #     @type regexp
    #     expression ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<date>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")
    #   </parse>
    # </filter>


    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    <match **>
      @type elasticsearch
      @log_level debug
      include_tag_key true
      host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
      port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
      scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME'] || 'https'}"
      ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
      logstash_format false
      index_name "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_PREFIX'] || 'tuan_79219430423'}"
      reload_connections true
      reconnect_on_error true
      reload_on_failure true

      user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
      password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
      request_timeout 20s
      <buffer>
           @type file
           path /var/log/fluentd-buffers/kubernetes.system.buffer
           flush_mode interval
           flush_thread_count 1
           flush_interval 15s
           chunk_limit_size 20M
      </buffer>
    </match>